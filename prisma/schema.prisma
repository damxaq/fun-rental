generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id String @id @unique

  email        String
  firstName    String
  lastName     String
  profileImage String?
  Vehicle      Vehicle[]
  Favorite     Favorite[]
  Reservation  Reservation[]
}

model Vehicle {
  id String @id @default(uuid())

  title        String?
  description  String?
  guests       String?
  latitude     Float?
  longitude    Float?
  country      String?
  city         String?
  street       String?
  fullAddress  String?
  photo        String?
  gallery      String[]
  price        Int?
  categoryName String?
  Favorite     Favorite[]
  Reservation  Reservation[]

  addedCategory    Boolean @default(false)
  addedDescription Boolean @default(false)
  addedLocation    Boolean @default(false)

  createdAt DateTime @default(now())
  User      User?    @relation(fields: [userId], references: [id])
  userId    String
}

model Favorite {
  id String @id @default(uuid())

  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
  Vehicle   Vehicle? @relation(fields: [vehicleId], references: [id])
  vehicleId String?

  createdAt DateTime @default(now())
}

model Reservation {
  id String @id @default(uuid())

  startDate DateTime
  endDate   DateTime
  createdAt DateTime  @default(now())
  ownerId   String
  guests    Int
  status    String    @default("Pending")
  messages  Message[]

  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
  Vehicle   Vehicle? @relation(fields: [vehicleId], references: [id])
  vehicleId String?
}

model Message {
  id Int @id @default(autoincrement())

  content   String
  createdAt String
  userName  String

  Reservation   Reservation? @relation(fields: [reservationId], references: [id])
  reservationId String?
}
